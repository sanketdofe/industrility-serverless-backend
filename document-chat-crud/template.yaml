AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  document-chat-crud

  SAM Template for document-chat-crud

Globals:
  Api:
    OpenApiVersion: 3.0.1

Parameters:
  Stage:
    Type: String
    Default: prod
  AuthToken:
    Type: String
    Default: <ACCESS_TOKEN>
  SourceBucketName:
    Type: String
    Default: document-chat-store

Resources:
  DocumentChatApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: Document Chat Api Gateway
      Cors:
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
        AllowCredentials: "'*'"
        AllowMethods: "'*'"

  CreateDocumentChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: create-document-chat
      CodeUri: src/
      Handler: create-document-chat.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          NODE_ENV: prod
          AUTHORIZATION_TOKEN: !Ref AuthToken
      Policies:
        - S3WritePolicy:
            BucketName: !Ref SourceBucketName
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: DocumentChatApiGateway
            Path: /
            Method: POST

  GetDocumentChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-document-chat
      CodeUri: src/
      Handler: get-document-chat.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          NODE_ENV: prod
          AUTHORIZATION_TOKEN: !Ref AuthToken
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:us-east-1:793708989585:secret:pinecone-credentials-eGuShq
        - S3WritePolicy:
            BucketName: !Ref SourceBucketName
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: DocumentChatApiGateway
            Path: /{chatId}
            Method: GET

  GetIsDocumentChatReadyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-is-document-chat-ready
      CodeUri: src/
      Handler: is-chat-ready.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          NODE_ENV: prod
          AUTHORIZATION_TOKEN: !Ref AuthToken
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: arn:aws:secretsmanager:us-east-1:793708989585:secret:pinecone-credentials-eGuShq
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: DocumentChatApiGateway
            Path: /{chatId}/is-ready
            Method: GET

  ListAvailableDocumentChatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: list-document-chats
      CodeUri: src/
      Handler: list-document-chats.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 60
      Environment:
        Variables:
          NODE_ENV: prod
          AUTHORIZATION_TOKEN: !Ref AuthToken
      Policies:
        - S3WritePolicy:
            BucketName: !Ref SourceBucketName
        - S3ReadPolicy:
            BucketName: !Ref SourceBucketName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId:
              Ref: DocumentChatApiGateway
            Path: /
            Method: GET

  OptionHandler:
    Type: AWS::Serverless::Function
    Properties:
      Handler: cors.handler
      Runtime: nodejs18.x
      Timeout: 5
      Events:
        ListAvailableDocumentChatsApiOption:
          Type: Api
          Properties:
            Path: /
            Method: options
            RestApiId:
              Ref: DocumentChatApiGateway
        GetDocumentChatAPIOptions:
          Type: Api
          Properties:
            Path: /{chatId}
            Method: options
            RestApiId:
              Ref: DocumentChatApiGateway
        GetIsDocumentChatReadyAPIOptions:
          Type: Api
          Properties:
            Path: /{chatId}/is-ready
            Method: options
            RestApiId:
              Ref: DocumentChatApiGateway


Outputs:
  DocumentChatApiGateway:
    Description: API Gateway endpoint URL for document-chat-crud function
    Value: !Sub "https://${DocumentChatApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"


